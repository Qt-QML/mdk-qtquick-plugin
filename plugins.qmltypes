import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable wangwenx190.QuickMdk 1.0'

Module {
    dependencies: ["QtQuick 2.13"]
    Component {
        name: "MdkDeclarativeObject"
        defaultProperty: "data"
        prototype: "QQuickFramebufferObject"
        exports: ["wangwenx190.QuickMdk/MdkObject 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "PlaybackState"
            values: {
                "Stopped": 0,
                "Playing": 1,
                "Paused": 2
            }
        }
        Enum {
            name: "MediaStatus"
            values: {
                "Unknown": 0,
                "NoMedia": 1,
                "Loading": 2,
                "Loaded": 3,
                "Stalled": 4,
                "Buffering": 5,
                "Buffered": 6,
                "End": 7,
                "Invalid": 8
            }
        }
        Enum {
            name: "LogLevel"
            values: {
                "Off": 0,
                "Debug": 1,
                "Warning": 2,
                "Critical": 3,
                "Fatal": 4,
                "Info": 5
            }
        }
        Property { name: "source"; type: "QUrl" }
        Property { name: "fileName"; type: "string"; isReadonly: true }
        Property { name: "path"; type: "string"; isReadonly: true }
        Property { name: "position"; type: "qlonglong" }
        Property { name: "duration"; type: "qlonglong"; isReadonly: true }
        Property { name: "videoSize"; type: "QSize"; isReadonly: true }
        Property { name: "volume"; type: "float" }
        Property { name: "mute"; type: "bool" }
        Property { name: "seekable"; type: "bool"; isReadonly: true }
        Property { name: "playbackState"; type: "MdkDeclarativeObject::PlaybackState" }
        Property { name: "mediaStatus"; type: "MdkDeclarativeObject::MediaStatus"; isReadonly: true }
        Property { name: "logLevel"; type: "MdkDeclarativeObject::LogLevel" }
        Property { name: "playbackRate"; type: "float" }
        Property { name: "aspectRatio"; type: "float" }
        Property { name: "snapshotDirectory"; type: "string" }
        Property { name: "snapshotFormat"; type: "string" }
        Property { name: "snapshotTemplate"; type: "string" }
        Signal { name: "startWatchingProperties" }
        Signal { name: "stopWatchingProperties" }
        Signal { name: "loaded" }
        Signal { name: "playing" }
        Signal { name: "paused" }
        Signal { name: "stopped" }
        Method {
            name: "open"
            Parameter { name: "value"; type: "QUrl" }
        }
        Method { name: "play" }
        Method {
            name: "play"
            Parameter { name: "value"; type: "QUrl" }
        }
        Method { name: "pause" }
        Method { name: "stop" }
        Method {
            name: "seek"
            Parameter { name: "value"; type: "qlonglong" }
        }
        Method {
            name: "rotate"
            Parameter { name: "value"; type: "int" }
        }
        Method {
            name: "scale"
            Parameter { name: "x"; type: "float" }
            Parameter { name: "y"; type: "float" }
        }
        Method { name: "snapshot" }
    }
    Component {
        name: "QQuickFramebufferObject"
        defaultProperty: "data"
        prototype: "QQuickItem"
        Property { name: "textureFollowsItemSize"; type: "bool" }
        Property { name: "mirrorVertically"; type: "bool" }
        Signal {
            name: "textureFollowsItemSizeChanged"
            Parameter { type: "bool" }
        }
        Signal {
            name: "mirrorVerticallyChanged"
            Parameter { type: "bool" }
        }
    }
}
